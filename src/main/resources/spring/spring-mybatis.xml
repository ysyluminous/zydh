<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.yaosiyuan" />

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>
    <!--<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />-->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:com/yaosiyuan/mapping/*.xml"></property>
        <!--&lt;!&ndash; 开启缓存支持 &ndash;&gt;
        <property name="configurationProperties">
            <props>
                <prop key="cacheEnabled">true</prop>
                &lt;!&ndash; 查询时，关闭关联对象即时加载以提高性能 &ndash;&gt;
                <prop key="lazyLoadingEnabled">false</prop>
                &lt;!&ndash; 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 &ndash;&gt;
                <prop key="aggressiveLazyLoading">true</prop>
                &lt;!&ndash; 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 &ndash;&gt;
                <prop key="multipleResultSetsEnabled">true</prop>
                &lt;!&ndash; 允许使用列标签代替列名 &ndash;&gt;
                <prop key="useColumnLabel">true</prop>
                &lt;!&ndash; 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 &ndash;&gt;
                <prop key="useGeneratedKeys">true</prop>
                &lt;!&ndash; 给予被嵌套的resultMap以字段-属性的映射支持 &ndash;&gt;
                <prop key="autoMappingBehavior">FULL</prop>
                &lt;!&ndash; 对于批量更新操作缓存SQL以提高性能 &ndash;&gt;
                <prop key="defaultExecutorType">BATCH</prop>
                &lt;!&ndash; 数据库超过25000秒仍未响应则超时 &ndash;&gt;
                <prop key="defaultStatementTimeout">25000</prop>
            </props>
        </property>-->

    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.yaosiyuan.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

</beans>